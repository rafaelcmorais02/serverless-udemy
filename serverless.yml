service:
  name: wedding-sls

plugins:
  - serverless-bundle
  - serverless-pseudo-parameters #Permite declarar variáveis com informações da AWS

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 256
  stage: ${opt:stage, 'dev'} #Se não especificado nenhum stage usar dev como default
  region: sa-east-1
  environment:
    GUEST_TABLE_NAME: ${self:custom.GuestTable.name}
  iamRoleStatements:
    - ${file(iam/GuestTableIAM.yml):GuestTableIAM} #Importa o arquivo e especifíca o objeto GuestTableIAM

resources:
  Resources:
    GuestTable: ${file(resources/GuestTable.yml):GuestTable} #Importa do arquivo o objeto GuestTable
    GatewayResponseDefault4XX:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: "ApiGatewayRestApi"

functions: ${file(functions/functions.yml):functions}

custom:
  GuestTable: #o nome da tabela assim como o arn serão informados quando houver o deploy
    name: !Ref GuestTable
    arn: !GetAtt GuestTable.Arn
  bundle:
    linting: false #é desaconselhável usar esse parâmetro como false
